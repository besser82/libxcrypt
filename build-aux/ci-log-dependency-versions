#! /bin/sh
set -e

# Records certain build tool versions for use as a cache key.
autotools_ver=

# Log the identities and versions of the build tools.
for tool in \
    "${CC-cc}" \
    "${NM-nm}" \
    "${AUTOCONF-autoconf}" \
    "${AUTOMAKE-automake}" \
    "${LIBTOOLIZE-libtoolize}" \
    "${PKG_CONFIG-pkg-config}" \
    "${PERL-perl}" \
    "${CPANM-cpanm}" \
    "${PERLCRITIC-perlcritic}" \
    "${PERLTIDY-perltidy}" \
    "${PYTHON-python3}" \
    "${GCOV-gcov}" \
    "${LCOV-lcov}" \
    "${LLVM_COV-llvm-cov}" \
    "${VALGRIND-valgrind}"
do
    # $tool might include mandatory command-line arguments.
    # Interpret it the same way Make would.
    set fnord $tool; shift # word-split $tool and load it into "$@"
    if command -V "$1"; then
        echo + "$@" --version
        "$@" --version
    fi
    echo
    case "$1" in
        (*autoconf*)
            autotools_ver="${autotools_ver}ac$("$@" --version 2>&1 |
              sed -Ee '1{;s/^[^\(]+\([^\)]+\) //;q;}'
            )"
            ;;

        (*automake*)
            autotools_ver="${autotools_ver}am$("$@" --version |
              sed -Ee '1{;s/^[^\(]+\([^\)]+\) //;q;}'
            )"
            ;;

        (*libtoolize*)
            autotools_ver="${autotools_ver}lt$("$@" --version |
              sed -Ee '1{;s/^[^\(]+\([^\)]+\) //;q;}'
            )"
            ;;

        (*pkg-config*)
            autotools_ver="${autotools_ver}pk$("$@" --version |
              sed -Ee '1{;s/^[^\(]+\([^\)]+\) //;q;}'
            )"
            ;;

        (*python*)
            "$@" -c '
try:
  import passlib
  import os.path
  print("passlib is " + os.path.dirname(passlib.__file__))
  print("passlib: version " + passlib.__version__)
except ModuleNotFoundError:
  print("passlib is not installed\n")
'
            ;;
    esac
done
set fnord; shift  # clear $@
printf '::set-output name=autotools-ver::%s\n' "$autotools_ver"
exit 0
